# requirements-enhanced-full.txt
# 향상된 MLOps 의존성 - 전체 버전 (Enhanced MLOps Dependencies - Full Version)
# 섹션 5+ 모든 UX 개선사항 포함 (All UX improvements from Section 5+)

# ===========================================
# 기본 요구사항 (Base Requirements)
# ===========================================
-r requirements.txt

# ===========================================
# 필수 UX 및 개발자 경험 라이브러리 (Essential UX & Developer Experience)
# 총 크기: ~20MB (Total Size: ~20MB)
# ===========================================

# 디버깅 및 출력 개선 (Debugging & Output Enhancement)
icecream>=2.1.3          # ~1MB   - 향상된 디버깅: print() 대신 ic() 사용
rich>=13.7.0             # ~5MB   - 아름다운 터미널 출력, 테이블, 진행률 표시줄
colorama>=0.4.6          # ~0.5MB - 크로스 플랫폼 컬러 터미널 텍스트

# 진행률 표시 및 사용자 경험 (Progress Bars & User Experience)
tqdm>=4.66.0             # ~1MB   - 루프 및 데이터 처리용 진행률 표시줄
alive-progress>=3.1.5    # ~2MB   - 애니메이션 진행률 표시줄 (고급 옵션)

# CLI 인터페이스 생성 (CLI Interface Generation)
fire>=0.5.0              # ~1MB   - Python 함수에서 자동 CLI 생성
click>=8.1.7             # ~2MB   - 대안 CLI 프레임워크 (필요시)
typer>=0.9.0             # ~3MB   - 타입 힌트가 있는 모던 CLI

# 로깅 및 구성 관리 (Logging & Configuration)
loguru>=0.7.2            # ~2MB   - 표준 라이브러리보다 나은 로깅
structlog>=23.2.0        # ~1MB   - 구조화된 로깅 (디버깅 향상)
python-dotenv>=1.0.0     # ~0.5MB - 환경 변수 관리 (.env 파일)
watchdog>=3.0.0          # ~2MB   - 파일 시스템 모니터링 (자동 리로드)

# ===========================================
# 데이터 검증 및 직렬화 (Data Validation & Serialization)
# 총 크기: ~8MB (Total Size: ~8MB)
# ===========================================
pydantic>=2.5.0          # ~3MB   - 향상된 데이터 검증 (v2 성능 보장)
marshmallow>=3.20.0      # ~5MB   - 대안 직렬화 라이브러리 (필요시)

# ===========================================
# API 향상 (API Enhancements)
# 총 크기: ~15MB (Total Size: ~15MB)
# ===========================================
fastapi-cache2>=0.2.1    # ~2MB   - FastAPI용 캐싱 시스템
fastapi-limiter>=0.1.5   # ~1MB   - API 속도 제한 (Rate Limiting)
uvloop>=0.19.0           # ~5MB   - uvicorn용 더 빠른 이벤트 루프 (Linux/macOS)
py-healthcheck>=1.10.1   # ~1MB   - 향상된 헬스 체크 엔드포인트

# 더 빠른 네트워킹 (Faster Networking)
orjson>=3.9.10           # ~5MB   - 훨씬 빠른 JSON 인코딩/디코딩
httpx>=0.25.2            # ~10MB  - 모던 비동기 HTTP 클라이언트

# ===========================================
# 구성 및 배포 관리 (Configuration & Deployment)
# 총 크기: ~10MB (Total Size: ~10MB)
# ===========================================
dynaconf>=3.2.4          # ~5MB   - 고급 구성 관리 (환경별 설정)
python-box>=7.1.1        # ~2MB   - 딕셔너리 접근 개선 (dot notation)

# ===========================================
# 모니터링 및 관찰 가능성 (Monitoring & Observability)
# 총 크기: ~15MB (Total Size: ~15MB)
# ===========================================
prometheus-client>=0.19.0 # ~3MB   - Prometheus 메트릭 수집 (Section 6.1 필수)
opencensus>=0.11.4       # ~5MB   - 분산 추적 및 모니터링
psutil>=5.9.6            # ~5MB   - 시스템 리소스 모니터링
memory-profiler>=0.61.0  # ~2MB   - 메모리 사용량 프로파일링

# ===========================================
# 대용량 데이터 처리 라이브러리 (Heavy Data Processing)
# 총 크기: ~350MB+ (Total Size: ~350MB+)
# ⚠️  주의: 설치 시간이 오래 걸림 (Warning: Long installation time)
# ===========================================

# 고성능 데이터 처리 (High-Performance Data Processing)
pyarrow>=14.0.0          # ~100MB - pandas용 Arrow 백엔드 (Parquet 지원)
polars>=0.20.0           # ~200MB - pandas 대안 (더 빠른 데이터 처리)

# 고급 시각화 (Advanced Visualization)
plotly>=5.17.0           # ~50MB  - 인터랙티브 플롯 및 대시보드
seaborn>=0.12.0          # 이미 requirements.txt에 포함

# ===========================================
# 테스트 및 품질 보증 (Testing & Quality Assurance)
# 총 크기: ~50MB (Total Size: ~50MB)
# ===========================================

# 고급 테스트 도구 (Advanced Testing Tools)
pytest-xdist>=3.5.0     # ~10MB  - 병렬 테스트 실행 (멀티코어 활용)
pytest-benchmark>=4.0.0 # ~15MB  - 성능 벤치마킹 및 회귀 테스트

# 테스트 데이터 생성 (Test Data Generation)
factory-boy>=3.3.0      # ~5MB   - 객체 팩토리 패턴 (테스트 데이터)
faker>=20.1.0            # ~20MB  - 가짜 데이터 생성 (다국어 지원)

# ===========================================
# 설치 크기 및 시간 요약 (Installation Size & Time Summary)
# ===========================================
# 
# 📊 전체 설치 크기: ~500MB+
# ⏱️  예상 설치 시간: 5-10분 (인터넷 속도에 따라)
# 💾 디스크 공간: 1GB+ (의존성 포함)
#
# 🚀 빠른 설치를 원한다면: requirements-enhanced.txt 사용 (~30